#lesson 1#
//vue templating syntax {{}}
//v-model->used for two way data binding with inputs

#lesson 2#
//vue devTools:
// syntax-> $vm.data.header
// will help in our routing and vuex store also

#lesson 3
//{{}} => has a some limitations:
//1. it can hold only one js expression
//2. we cant declare variables
//3. we cant use if statements 

#lesson-4
// using V-for directive for list rendering
// we can iterate a list or an object using v-For directive
// <li v-for="item in items" :key="item.id">{{item.label}}</li>
// we should try to provide a key to every list item for better performance, its not compulsory but a good practice
//to access the item index we can do that too using v-for="(item,index) in items"

#lesson-5
//v-model for our  two way data binding with inputs,textareas,checkboxes and more
//v-model can be used with some v-model modifiers like lazy,trim,number etc to manipulate the input 

#lesson 6 - Event Handling
//using v-on directive for handling events
//we can attach handlerslike this =>  <input  v-on:keyup.enter="items.push(newItem)" type="text" v-model="newItem" placeholder="place an item">
// we can also write  v-on:keyup.enter, v-on:click as  @keyup.enter, @click

#lesson-7-using methods
//we define methods in a vue option called methods,similar to the data option 
//in our methods, we donot have automatically access to our vue instance data like we used to have directly in our inline js expressions inside our v-on, so we need to explicitly reference it using this keyword

#lesson 8
//vue provides us with vif and v-else directives for conditional rendering

#lesson 9- HTML Attribute binding
//we can couple any html attribute to our data using V-bind
//example <a v-bind:href="newItem">click here</a>

#lesson 10 -dynamic css binding
//we can add dynamic classes with class binding using two different syntaxes:
// 1.Object Syntax  2.Array Syntax
// object Syntax: it is better if we dont have multiple classes to add. syntax -> :class="{strikeout : item.purchased}-here the key is the class and the value is the condition for applying that particular class
// Array Syntax:Useful while we have multiple calsses to add--->:class="[item.purchased? 'strikeout':'']"

#lesson 11 -computed properties
//vue provides another feature known as computed properties that lets us tranformations/calculations on our data
//it computes in realtime
//Syntax  computed:{
                characterCount(){
                    return this.textInput.length
                }
            }
